$space: (
  "0": 0px,
  "2xs": 4px,
  "xs": 8px,
  "s": 12px,
  "m": 16px,
  "l": 24px,
  "xl": 32px,
  "2xl": 48px,
  "3xl": 64px,
  "4xl": 96px,
  "5xl": 128px,
  "6xl": 192px,
  "7xl": 256px
);

$breakpoints: (
  "sm": 620px,
  "md": 992px
);

@function spacing($property, $size) {
  @if ($property == "margin") {
    @return (margin: $size);
  } @else if ($property == "padding") {
    @return (padding: $size);
  } @else {
    @warn "Invalid property passed to spacing function. Please use 'margin' or 'padding'.";
    @return null;
  }
}

@each $bp, $width in $breakpoints {
  @media (max-width: $width) {
    $space: map-merge($space, (
      "2xl": 40px,
      "3xl": 56px,
      "4xl": 72px,
      "5xl": 88px,
      "6xl": 120px,
      "7xl": 152px
    ));
    @if ($bp == "sm") {
      $space: map-merge($space, (
        "3xl": 48px,
        "4xl": 64px,
        "5xl": 80px,
        "6xl": 96px,
        "7xl": 112px
      ));
    }
  }
}

@mixin sp-m($sides...) {
  @each $side in $sides {
    .sp-m-#{$side}-#{$size} {
      #{spacing("margin", map-get($space, $size))};
    }
  }
}

@mixin sp-p($sides...) {
  @each $side in $sides {
    .sp-p-#{$side}-#{$size} {
      #{spacing("padding", map-get($space, $size))};
    }
  }
}

// Usage examples
@include sp-m(top, right, bottom, left);
@include sp-p(right);
@include sp-m-b(4xl);